@{
    ViewData["Title"] = "Panel de Usuario";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-success text-white">
                    <h3 class="text-center mb-0">✅ Login Exitoso</h3>
                </div>
                <div class="card-body text-center">

                    @* Mensaje de bienvenida *@
                    <div class="alert alert-success" role="alert">
                        <h4 class="alert-heading">@ViewBag.WelcomeMessage</h4>
                        <p>Has iniciado sesión correctamente en el sistema.</p>
                    </div>

                    @* Información del usuario *@
                    <div class="mb-4">
                        <h5>Información de la Sesión:</h5>
                        <p><strong>Usuario:</strong> @ViewBag.Username</p>
                        <p><strong>Fecha y Hora:</strong> @DateTime.Now.ToString("dd/MM/yyyy HH:mm:ss")</p>
                    </div>

                    @* Acciones disponibles *@
                    <div class="d-flex justify-content-center gap-3">
                        <a asp-controller="Home" asp-action="Index" class="btn btn-primary">
                            🏠 Ir al Inicio
                        </a>
                        <a asp-action="Logout" class="btn btn-outline-secondary">
                            🚪 Cerrar Sesión
                        </a>
                    </div>
                </div>
            </div>

            @* Información adicional (opcional) *@
            <div class="card mt-4">
                <div class="card-body">
                    <h5 class="card-title">🎉 ¡Felicitaciones!</h5>
                    <p class="card-text">
                        Has implementado exitosamente un sistema de login funcional que:
                    </p>
                    <ul class="list-unstyled">
                        <li>✅ Conecta con Supabase</li>
                        <li>✅ Valida credenciales de usuario</li>
                        <li>✅ Maneja errores de forma segura</li>
                        <li>✅ Usa contraseñas hasheadas</li>
                        <li>
                            ✅ Sigue el patrón MVC
                            - ✅ Perfecto para aprender los conceptos fundamentales

                            ## 🚀 Próximos Pasos (Futuras Mejoras)

                            Una vez que domines este login básico, podrías agregar:
                            1. **Sistema de registro de usuarios**
                            2. **Sesiones persistentes con cookies**
                            3. **Contraseñas hasheadas (BCrypt)**
                            4. **Recuperación de contraseñas**
                            5. **Validación de email**
                            6. **Roles y permisos**
                            7. **Remember me functionality**
                            8. **Logout con limpieza completa de sesión**
                            9. **Protección contra ataques de fuerza bruta**

                            ## 💡 Consejos para el Futuro

                            ### Para Seguridad en Producción:
                            ```csharp
                            // Instalar BCrypt: Install-Package BCrypt.Net-Next
                            // Hashear contraseña al registrar:
                            string hashedPassword = BCrypt.Net.BCrypt.HashPassword(password);

                            // Verificar contraseña al login:
                            bool isValid = BCrypt.Net.BCrypt.Verify(password, hashedPassword);
                            ```

                            ### Para Proyectos Más Grandes:
                            1. **Separar lógica en servicios:** Crear `IAuthService` y `AuthService`
                            2. **Implementar logging:** Usar `ILogger<AuthController>
                                `
                                3. **Agregar rate limiting:** Proteger contra ataques de fuerza bruta
                                4. **Usar Identity:** Framework de autenticación de ASP.NET Core

                                ### Para Mejor UX:
                                1. **Indicadores de carga:** Spinner mientras se valida
                                2. **Mensajes más específicos:** Diferenciar entre usuario no existe vs contraseña incorrecta
                                3. **Recordar último usuario:** Guardar username en localStorage
                                4. **Redirección inteligente:** Volver a la página que intentaba acceder

                                ## 🔒 Nota Importante sobre Seguridad

                                **⚠️ ADVERTENCIA:** Este ejercicio usa contraseñas en texto plano únicamente para fines educativos. En cualquier aplicación real:

                                1. **NUNCA** almacenes contraseñas en texto plano
                                2. **SIEMPRE** usa funciones de hash como BCrypt, Argon2, o PBKDF2
                                3. **IMPLEMENTA** validación de entrada robusta
                                4. **USA** HTTPS en producción
                                5. **PROTEGE** contra ataques de fuerza bruta
                                6. **CONSIDERA** autenticación de dos factores

                                ## 🎓 Lo Que Has Aprendido

                                Con este ejercicio has dominado:

                                ### Conceptos de ASP.NET Core MVC:
                                - ✅ Creación de controladores
                                - ✅ Inyección de dependencias
                                - ✅ Manejo de formularios POST
                                - ✅ Validación de modelos
                                - ✅ Redirecciones entre acciones
                                - ✅ Uso de TempData y ViewBag

                                ### Integración con Supabase:
                                - ✅ Configuración de HttpClient
                                - ✅ Headers de autenticación
                                - ✅ Consultas con filtros
                                - ✅ Deserialización de JSON
                                - ✅ Manejo de errores de API

                                ### Mejores Prácticas:
                                - ✅ Separación de responsabilidades (MVC)
                                - ✅ ViewModels para formularios
                                - ✅ Validación tanto del servidor como del cliente
                                - ✅ Manejo apropiado de errores
                                - ✅ Protección CSRF con tokens

                                ## 🚀 ¡Excelente Trabajo!

                                ¡Has implementado exitosamente tu primer sistema de autenticación! Ahora tienes una base sólida para:

                                - Entender cómo funciona la autenticación web
                                - Integrar bases de datos externas con aplicaciones MVC
                                - Manejar formularios y validaciones
                                - Seguir patrones de desarrollo profesionales

                                **Próximo desafío:** ¿Te animas a agregar un sistema de registro de usuarios? 😄

                                ---

                                *¿Tienes dudas o errores? Revisa el troubleshooting o consulta con tu profesor. ¡Sigue practicando!* 🎉
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>